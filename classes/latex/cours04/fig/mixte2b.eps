%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 189 513 570 648 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: mixte2b.eps
%%CreationDate: Mon Mar 10 14:13:21 2014
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 14.0.0.701
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if/patternScallingMatrix where{pop
patternScallingMatrix $ptm matrix concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup
/$sdf xd{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd
/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra
add exch load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq
{$SCA}{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2
copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup
0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor
exch def convertcolor get_devicen_color aload pop convertcolor
get_devicen_color_specs CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse
/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll
dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1
roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1
roll pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font Euclid
%!FontType1-1.0: Euclid 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 50 /two putdup 61 /equal putdup 67 /C putdup 76 /L putdup 43 /plus putdup 49 /one putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B123FFCF8A870241E2A35E4877BF66DE00728B6A7250F981CA1F5F137525858405A1E22963F15B0A122B350
0FF51B75B4A25A5170D852C60EC133D9D0958491085C3F69D20ED1447A60DC68E2C13465524389E708295FD7058B6571F6CF8628DD1D472AB9C8DAA83680452B
3DE21A044FC36CA21E6AE89A5B6F9891E22513904918F58EA07BF9F484B49AE3F4F7D2E0E3D5727363146FF46FF7EBCED1AD5B023ED9488F3AABB68900759FA4
6E89C6EFD50C187AA8971F1B9088A2EAEB8696CE89119AD5414542F1BCEB6DA76FADA19D7492683B0BC17AC291DECA1546134C1D46AFE7B821F7FD16884D07B7
A5A03BC4995BEE484042DD5AECEB076952D7826A82C7D905164764D94B09922962B330256BE53D7F2002C0147435070202D35CE46C1AD9DF57B4A20BEB07D991
72C4BA09D02527886E6E6845615EB5E51C225A5BF04D0E5B33D50192645776B5EB0722ABCFF2F07D75A790A83D08722CB6EFB9CB83348AA3D8FEB8C75001175A
9550C849B4216FEC867A289ED84B22B59F09C3527ED17A61349F5232B420A2F4A988455500F07B4AE55D0D520A66BD534984A9039BA66EAAF6EC89A528C9BCC8
6CF9EAC53739A326705B1354455581C90FDC27C7CE769989A8730C707F54795C90B6975AD07693A0FACA855CAE42EC908179FF9B04760BB2EFEE629137673408
75124085049E739046036264F293064863A78B4B6F83780206B8433632AEB265A6B565142D650BFCFB6C5D2C1834110E6133D84848C9345FB316B8FE776D0D74
DD1B0E3A3386D73B03691556B0A49DB04708A556AF7A9286DB1085E1C25BE7F496A37431FDC731EDE2E0748259BE3527118EF9B06F161F71B33B56309698AB12
81A014F558AD958BFFD8A515DC06D0B3A0505A8FC5AAD9A110F3FC61B86AA9E97C3657EC446860810D5056129A6BDBD1C4C4F1079E671A473EF0A1C89E6DC3A2
66BC1901A4D71A59C47924E321958D4FC011635381A1D115B48DD844ED65545CEC8DB4798C5FB1733BC8FD3113726B6F1B102B31AE380ED3EC0B7FABA0942527
71C137C3362CD1BDA0383A5863628740208AD9EDEFD62B2E1EB3EE92CBC33DB3E442946AEA597CC6852E499FFD531739E390448F49E4620841BDFDF637FA75F2
2BF04B159BA7EFD1F32758F0B71671BA33CA04CA5C01844F4BE71B96787B9BF8C21BA00468CB93910550704403F9C9278B5D2E9410801A3B0D9EDD5184C463AD
9E1781E1CE9546047E859F04789239DD6D81162B73B7D41A4389B351F2A40778686FDD013714604E750937146ED0CC41BBE885193114D33061BB05D678A845D3
A6012B1EE70F43AFAF705E89ACC6A64CBA558AE40ACCCE13BA66BB5F3AAC1949CE43410CA995FFD52A92146CDBE643BD2964BA44CB55464D4622420338EF3CDD
212F939C36AEC02DADBE0AA65D78D76FAB9234EF82BADB33E0924BF342A50755571CBE330EB283E1E1871F7A50E337833278D02E267239F11543FFAD5B566C97
5C8EF5C427EC94F4F15B477367BA3069A7C68A6BF12CB21383DB744D138B692E1387BD24ED206611FD439B66D0D8F279CB0CECAB6ADB485406440E851609F533
0998958F596EA1834CA965A85574F5F54F236DC9DB2EAE72B967BB57ED24D42FCEB358DC082929473815BB370186ABA4BEA3651C1689F24D2FDAB5E5D33FC297
259FC4C0997B4482CCC99407AE671E86959778FBCA73D78F4FD413198DF07AAEE15D70AAB8840362AECAB16DB592F00D5A9A34188D3EB66B8A9E0BAE2BFF03B1
13D23428042DB08A3705EB2791C12CA44362A11B52F4DE32E7033DDF35ACD3CE1E65342AA0E53BAF40554211B1EFC49948B72B069C094B9979B6C89D4DB22459
2438EF30B99E836388FFAE69DF2A8F7D16ABCEA8C57F0A3A27D68A0902649A2553636774C4F8840CF7AB9394E65F1661EE3C893AC062A015B0AD039D665C1242
C1C0115BA4724975F868FC477FDEFE7022CE981C7CFE7438500C14DAC65C517A46738194C4838F22630F6DDE6B45B94542628E640B19A4C221CB5054E724AC70
9859FB045E5FE046F3A6BCE72E3D18DF0CD0CF9F83475BA369C1190497E5C826057DAE26DD9CA9454C653B1C7C003C3A7FE074C25B47FF932F2EE5E01068194F
83B6FE5E74164A3DD609304D99E5094A7802C71C045B9A860C4CD265FCD9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
278 351 833 500 833 778 181 389 389 500 778 278 333 278 500 500 
500 500 500 500 500 500 500 500 500 278 278 778 778 778 472 778 
750 708 722 764 680 653 785 750 361 514 778 625 916 750 778 680 
778 736 555 722 750 750 1028 750 750 611 278 500 278 611 778 500 
500 555 444 555 444 305 500 555 278 305 528 278 833 555 500 555 
528 392 394 389 555 528 722 528 528 444 500 278 500 611 1000 500 
1000 278 307 500 1000 444 444 500 1082 555 444 1014 1000 1000 1000 1000 
278 278 500 500 500 500 1000 500 959 394 444 778 1000 1000 750 333 
278 444 639 500 750 277 444 500 947 382 667 667 333 947 500 399 
778 347 358 500 548 639 278 444 301 377 667 750 750 750 472 750 
750 750 750 750 750 903 722 680 680 680 680 361 361 361 361 764 
750 778 778 778 778 778 778 778 750 750 750 750 750 625 500 500 
500 500 500 500 500 722 444 444 444 444 444 278 278 278 333 500 
555 500 500 500 500 500 778 500 555 555 555 555 528 555 528 ]
CorelDrawReencodeVect /_R35421166-Euclid /Euclid Z

%%BeginResource: font Euclid-NormalItalic
%!FontType1-1.0: Euclid-NormalItalic 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid-NormalItalic def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 102 /f putdup 120 /x putdup 76 /L putdup 116 /t putdup 80 /P putdup 66 /B putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B123FFCF8A870241E2A35E4877BF66DE00728B6A7250F981CA1F5F137525858405A1E22963F15B0A122B350
0FF51B75B4A25A5170D852C60EC133D9D0958491085C3F69D20ED1447A720EF3EB15ACD5D2BB8C65E96CAA71C7D013FF579D24C2F7669824140129108C81B780
84511429EFC7B0944D35E74006713A03F66A67DBE9BD480B934A05841CC5F60E90E3D357F9907090DF06DE9A41ED04F95A859187EA6417D438E55DF528642F87
3EFC5CF7D68C59B5E0AAD56D331070A133A01DE9D36E21A1358FFDEF81809F988279C24D8BE9BB472EB219146C4C05308E2D78CBC31DEB621CA25EA1CC9E9712
4ED771B626459BC0E322E20DBB56C88789BE7FDA1E6575E5C4A6D6717F7797C366996D315EA72381348C00DB7A5D0AC86F2B9B56745EC7C6A33391EFC96E106C
0F7314BD66458513A8CC06AFD6941816D7F935FE9DEDDC9A32624381AD9552435498D9A18B87C6148965583CB5CD700E00598F6747945791A28DA9859DF8D9A0
EB637D9D5368E852179A6CB0EF0F8824D45A431587DEDB2E4DEDECB2E486BEAF4296623CAFDBA8F2950A439AAFF8E83CB301847D5639196CC1954CC369CF1F3A
E6FC857FE3BB271732B5B61AA667E5EF70C2F4D4F1D7862853E7BCF3614E9B316DE7BEAA3354F5241B7B5C6786606662CDF3F151A1F6C65BA68C9146E5F2AC04
CDC49166397F009E620506E4A3783E16F53DF6656954B2A4B14216FBF2AB5395E69499F545D6913A64A294D672F744F0DE9761D03D58A355EFA6D0A80C2AC205
2FCC074D2AD7EFA670FD1A01B4593DF18AE3A574CB3A9075F5D92AD70EEA54EE4E0F1F949102D1CEF0A7D6ACC83158CE905700F0C42055B0E2610BCC0A6D35E9
BE53619E30CA2752B366802FFB5EC96CC035A80BFD24DBC307A7BE7581BE9F45EA64B3827AA9716483D380041DF0BEEBC2F21EAC4AD15B2F74CC212ED9C6F5E0
78DD9D295C201257BC0E663BF920F01187F918DFE9F3A3EBFA04F22BF508EB9164D0895246360F254D94288F06B1345726ED975DD7EEC3A99DC294DC45748A9E
C4A65EECA237D849C6137E84E9C2880DF98ABF259AF2BB923A87B2C476299974B27FD805A54FF04445167CCABB15B278678996D8A30D8F605B25A3B8DD37C861
58F0777267926B99C0E85F30EF98F2C01014F1B08F3979F83B6B2255C67E6DCB7CD722C78499850F8B4D65D5BBF7019CF8B29B387126D4FFC3F0D08BE83F3F7E
086BCA75021C3B22DFA278C2F9572AEDDFA8F6F592D80FA6CB385603103BBC7B738BCF39B1670464FB079A249F8FDF95D83CF0B96436EF338E191B3474E2D20D
A7D36C4CCB4EB061F565F1D33A1564F06C488B7062EB19BF35D9A7C8D7C0ED7DE71A939C386903D8A5A56A9CC2C8CCFD326BDC4481EA2F38D8D24D86E1607189
C1F080786C823A13072199424DC7C9036F416C3E3CA61C9958BFD15A330D03958863162613455ADA529A292FAC9704699F9ECF2BBA436E06453A2BEC53B22FD0
33F800027AED0DAFB2D87BA0D23C6226610327CD20E350BE53F27F7FA6E260A254CB681C5F87933E24FFF09F3C67D02D99EA46DEF5C31E787CEF9EA000DE1652
C33E0BFC5209C8A534385E48EF1CDFA63A61FB1DD38D4281DD3CB8D3D9A99987FF5E91C4E1D1015DD890E4D06146EA8465E5A20611297CE38A2DFF8CB8A2EFEF
ABD1B11EA846F8E49E22D13C3EAD788194C68DD53F8D07C487B11527B3C44ADA3D0BE9A2310A1F4F953F5FAFE600FDD856BCE9D50DF9196A272996A5DFE43743
B0EDFF6DF8895039304F0B6D8EEFDBD53332EE5FB6D820EA070CC7811E33FD7D29FAFD60564F49A82D304CA2AFEA10F56724EE0D92476EDF6CAA83BCA21F52CF
37E4DFFA02D038D417C332F3F29E91DD187CE89E74F1788E3E58708AA55BEDAFB8699F18B814B8825A15C3AB31BDD6607E838CB1BCA003F9FF3EE297F89129A2
D4BB30E566CA1D08507DEAAA24BC78A4DFBE4400F5D2E224A702B1B87E244BBAD7E11143A5454172AC31991E48E907109E81B829DF1EAD26BEDDC15247A43C68
1EE76FB66F56AA9CB78782E589B1279F28AE613CB2FBC62F8125CC61076549FBB67E56CB6DC5C4619899590ACB0FF10608D366D82DDD3603C7C9B18BABAACD83
CD24E8A1859986B5C81B92DC728132354720872A04126BB92D2ADB223E7FFF9EF8912F2BDFA4F884460C9843341236705DA42CBFA7A4F1695F337346441DF892
ED580F84732F02990293706267487B214CA77E8303DD0AABC73A5A13EE99FD7CF096D88FAE3F3630C7843867E3194B6CE615A6B11632C8A05AF510DB38F6739D
2782AC6E3FC4FAEB1CED0D2FA6462914D4435969F614919899748EFA78D9A482F95EA0E10D554AD118F2171B00433D2751CB95C2572138A9267410860BD14004
A018AAC204D542A8DCC12174434682244EBD26D85401583C5A6380AB24B4F6A8F20163E7DEB25E68F2A380F18233852C36C3B87417981B909328E03C2E4842D1
3D6675F8BCB30C05BE98ED5471F4236DDEA67374FCF4D9CBF1741EAA9FD4798DC331DD14E71B17CC83ADCEF84C5F0214C8DFBC316A1D3B3ABE74C5D33468B5D9
F6C151ED2FE150A6FEE19CB1E49FFA01E9E09188BC186073A836611042C5FF97F76342E917881F7CE3ACD65B3FDACBCEF59FC81DA90347AA707862398BB92642
FA15923EC430C8340FA9A8C13F040DAFA0D15F639E9FBC5869EEBA0914E6EF338491000430003F9278578475F1BB65AFC4AC2BB4114DD5708101170892ABEA7D
6B152B106F5C9F9A21D645F364C0E8B51A24AB73769438C237EACE22AC0F9486D84FB2397C2A80174022E522E3C2B8D0B6738026D2FCBA32789189C6AC6DB349
B2C5DD8CBDE3AD91D6D76A6A742F7E1254FF30BED0072092169181C1D0CC96D58301A2CA1A1D61A2D5349C2FF17B66EDD27BF65CF1EF947B4B8C9EE28A6B10F0
76AC7DD9EE5150D97856488118C2952FD4451CAA1C4719530003B97C70492E367B22F142D6615CD23C1BE08BA8388ACC25A2A7195CED024221A5B0FCEF0E17D3
6B85D262C412715C4504CA3DFC93B131193C394F4DE9583935FEAC7EE50DBBA7327D0F721902FF2D4B4055B636AE4D016ABE674721F1B2D0F1CEBBF6AAC7F6FA
F2BE4612506D53A6FF40838FA0733FFB3257D7ABD4305F7AEA0FB6A1299471A514FF8207DAEDF3CE3428F36631A25D041812148560020A51D953E3C4C81CD9E7
77FA98785A8F7D8DFE888CEF92ACAFD476436E987C2A5AF06EDB14EED971047AD771ACF4040DC9D74EB74FECC9DAB4486CA50DFAF2A85EF2F688C5B429
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
307 413 818 511 818 766 255 409 409 511 766 307 358 307 511 511 
511 511 511 511 511 511 511 511 511 307 307 766 766 766 511 766 
743 704 715 755 678 653 773 743 385 525 769 627 896 743 766 678 
766 729 562 715 743 743 999 743 743 613 307 500 307 613 766 511 
511 460 460 511 460 307 460 511 307 307 460 255 818 562 511 511 
460 422 409 332 537 460 664 464 485 409 511 278 511 613 1000 511 
1000 307 307 514 1000 444 443 511 1083 562 460 985 1000 1000 1000 1000 
307 307 514 514 500 511 1022 511 959 409 460 715 1000 1000 743 333 
307 459 660 623 908 277 460 511 947 382 664 667 358 947 511 399 
778 347 358 511 603 639 277 460 301 377 664 750 750 750 511 743 
743 743 743 743 743 883 715 678 678 678 678 385 385 385 385 755 
743 766 766 766 766 766 778 766 743 743 743 743 743 627 537 511 
511 511 511 511 511 715 460 460 460 460 460 307 307 307 307 511 
562 511 511 511 511 511 778 511 537 537 537 537 485 511 485 ]
CorelDrawReencodeVect /_R35421166-Euclid-NormalItalic /Euclid-NormalItalic Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
234.64346 533.15376 526.46542 626.34019 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.10 null ] set_fill_color
234.64346 626.34019 m
526.46542 626.34019 L
526.46542 533.15376 L
234.64346 533.15376 L
234.64346 626.34019 L
@c
F

@rax %Note: Object
234.34980 533.86809 308.27169 623.51093 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.40 0.20 0.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.40 0.20 0.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
234.34980 623.51093 m
235.01877 533.86809 L
308.27169 579.02400 L
234.34980 623.51093 L
@c
B

@rax %Note: Object
216.89887 533.06476 569.29805 533.06589 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
216.89887 533.06532 m
564.92334 533.06532 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
564.50806 535.70013 m
569.29805 533.06532 L
564.50806 530.43052 L
564.50806 535.70013 L
f
@J

@rax %Note: Object
234.35150 521.35994 234.35263 642.40243 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
234.35206 521.35994 m
234.35206 638.02772 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
231.71726 637.61244 m
234.35206 642.40243 L
236.98687 637.61244 L
231.71726 637.61244 L
f
@J

@rax 238.31915 642.41745 244.65912 647.85345 @E
[0.00028346 0.00000000 0.00000000 0.00028346 238.31914089 642.54951980] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 42333.00000 z
0 0 (x) @t
T
@rax 555.91767 535.66384 560.39754 543.30775 @E
[0.00028346 0.00000000 0.00000000 0.00028346 555.91764896 535.79591741] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 42333.00000 z
0 0 (t) @t
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 42333.00000 z
0 0 (t) @t
61086 0 (t) @t
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid 42333.00000 z
21103 0 (=) @t
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 28222.00000 z
75141 -11289 (f) @t
T
@rax 514.62454 513.41726 539.61506 525.77433 @E
[0.00028346 0.00000000 0.00000000 0.00028346 514.62451661 518.26250073] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 203.88813 622.96639 228.43531 630.60038 @E
[0.00028346 0.00000000 0.00000000 0.00028346 203.88811853 623.08741028] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 38805.00000 z
0 0 (x) @t
62292 0 (L) @t
T
@rax 203.88813 622.96639 228.43531 630.60038 @E
[0.00028346 0.00000000 0.00000000 0.00028346 203.88811853 623.08741028] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 203.88813 622.96639 228.43531 630.60038 @E
[0.00028346 0.00000000 0.00000000 0.00028346 203.88811853 623.08741028] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid 38805.00000 z
25054 0 (=) @t
T
@rax 203.88813 622.96639 228.43531 630.60038 @E
[0.00028346 0.00000000 0.00000000 0.00028346 203.88811853 623.08741028] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax %Note: Object
234.66813 533.38762 381.90529 624.40696 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
234.66813 533.38762 m
381.90529 624.40696 L
S

@rax %Note: Object
234.66813 533.38762 381.90529 624.40696 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 1.00 1.00 0.00 0.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
234.66813 624.40696 m
381.90529 533.38762 L
S

@rax %Note: Object
236.27083 534.08580 329.76227 591.88054 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[2.00000 1.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
236.27083 591.88054 m
329.76227 534.08580 L
S

@rax 332.08243 516.61786 343.00233 526.89090 @E
[0.00028346 0.00000000 0.00000000 0.00028346 332.08241305 518.69506764] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 42333.00000 z
0 0 (P) @t
T
@rax 332.08243 516.61786 343.00233 526.89090 @E
[0.00028346 0.00000000 0.00000000 0.00028346 332.08241305 518.69506764] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 332.08243 516.61786 343.00233 526.89090 @E
[0.00028346 0.00000000 0.00000000 0.00028346 332.08241305 518.69506764] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid 28222.00000 z
25880 -7338 (2) @t
T
@rax 332.08243 516.61786 343.00233 526.89090 @E
[0.00028346 0.00000000 0.00000000 0.00028346 332.08241305 518.69506764] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
T
@rax 220.87786 588.49625 229.71175 596.69206 @E
[0.00028346 0.00000000 0.00000000 0.00028346 220.87785019 588.49623044] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid-NormalItalic 42333.00000 z
0 0 (B) @t
T
@rax %Note: Object
232.73235 588.97814 238.08416 594.32995 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
235.40825 594.32995 m
236.88595 594.32995 238.08416 593.13175 238.08416 591.65405 c
238.08416 590.17635 236.88595 588.97814 235.40825 588.97814 c
233.93055 588.97814 232.73235 590.17635 232.73235 591.65405 c
232.73235 593.13175 233.93055 594.32995 235.40825 594.32995 c
@c
B

@rax 189.81751 571.24290 211.45323 579.97871 @E
[0.00028346 0.00000000 0.00000000 0.00028346 189.81750487 571.50678224] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35421166-Euclid 42333.00000 z
0 0 (2CL) @t
T
@rax 284.60041 518.31184 315.57203 527.77984 @E
[0.00028346 0.00000000 0.00000000 0.00028346 284.60039904 519.30791801] @tm
 0 O 0 @g
[ 1.00 1.00 0.00 1.00 0.00 null ] set_fill_color
e
/_R35421166-Euclid 42333.00000 z
0 0 (+1CL) @t
T
@rax %Note: Object
234.93798 533.67137 526.46910 626.41474 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
525.79049 533.67137 m
234.93798 533.67137 L
235.02359 625.65279 L
526.46910 626.41474 L
525.79049 533.67137 L
@c
S

@rax %Note: Object
234.72737 533.37997 381.29528 533.38110 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 1.00 0.00 1.00 0.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
234.72737 533.38054 m
381.29528 533.38054 L
S

@rax %Note: Object
328.00394 531.00992 333.35575 536.36173 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
330.67984 536.36173 m
332.15754 536.36173 333.35575 535.16353 333.35575 533.68583 c
333.35575 532.20813 332.15754 531.00992 330.67984 531.00992 c
329.20214 531.00992 328.00394 532.20813 328.00394 533.68583 c
328.00394 535.16353 329.20214 536.36173 330.67984 536.36173 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font Euclid
%%+ font Euclid-NormalItalic
%%EOF
