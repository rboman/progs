%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 281 639 468 740 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: parabolic.eps
%%CreationDate: Fri Mar 07 14:15:55 2014
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 14.0.0.701
%Color profile: Désactivé
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if/patternScallingMatrix where{pop
patternScallingMatrix $ptm matrix concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup
/$sdf xd{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd
/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra
add exch load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq
{$SCA}{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2
copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup
0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor
exch def convertcolor get_devicen_color aload pop convertcolor
get_devicen_color_specs CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse
/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll
dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1
roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1
roll pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font Euclid
%!FontType1-1.0: Euclid 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 108 /l putdup 105 /i putdup 103 /g putdup 110 /n putdup 101 /e putdup 32 /space putdup 99 /c putdup 97 /a putdup 114 /r putdup 116 /t putdup 233 /eacute putdup 115 /s putdup 113 /q putdup 117 /u putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA4FD547AC1857372BEE88BEF04F350ADEC21D72A17F822B7DA7449147F456503359226AC9425DDA46541
7037CFCA57D6DDC8141B0272412526200517D10F7A1A4DE6146A856D0BBF34D66B3B7A7AB7402A6AD7D38EE191906C355153297167BCF207FA67D1E1D27FC838
4B54C1E87249290DA85A7B7E92461A1B5ABE168C570E0E9878A0D86CC47FC38703A048E45CC32AC3C668313B9700598802343239AD446F9136BD16CEC7961496
A5349551028CF354FA069E5FF5822F58060CB21563375FCEB218B55BB6BD999C8FB38AFBD70A70D6373D4C7D4A1D844817D2F4DE90F2DD6DA0F890C72EE00B1D
25EE55B9A8EDB2328F32080FD6CE53542E8D32C1B7B3B904D992B1B11ED11E615B448CB6156D961A88A7AC85AF6B8358B4D306036B8A6861BE6427294608270D
82F6CD38FF9BCB663821E32F51D56B21F8F52C5DAE182510F0C2C23BF0F724C2B98043AE1509E23911E413C59EB3F89ED77F22D33970BB7DF1946707393C8FA7
97BF8EEC96036AD95035FF59AFEDB221FA7D1E7BCBC03B62D0E9F316C8635A80C03D0C9EC2AEC0DFDE479FAE1F7C5D7E0BDC409C603D84C2B463CF9BCEC941C0
E380363F4B0DCDFB8C59366D9E5B43100DF0E232938F488D52923DF67AE61B452B9A81CFA59289BB569D6B64377818C27A894B02B06EDAFF7CA8E7083F5F2F76
B5D5FA61BC56A259A1D3499CC49D7CC58CF59CEB41CBE3DFD1001DDBB1524BA592BE2E9F712530D08D4E78A0ABE9DEEE9ABAE885091A1CFF0BE167F6ACB5721B
19F4F5D42B4DA7BEAEDCAB71B116E088B11DC47BAB3A008785A8035CDE94113A24DBBF9D868EB49A5D366CD0A4E920CB50B84960D700C96039C688B4B7523709
EA52E83EB5294D5BDDFA8EFEA16E85F7906EA7A1ACE75ED618942F427B45D3D29288E328951AA1870267FAB5DCFF2CDA7229C496D88B6CFA368E00C4AF57EF5C
C58AC71621AE1A39F0ED479B5FDE93F0D1126AA37EBFF37FF3EBC0FB60C56E4649BEC4A7E0F8A8122BFC1828348D8D4459C6D17F62BD1B5EB81D573952652B84
53A8E847EB6F0E93A3CF29B985C92F5D54BBA926DD356FE81D790573003C014DB6D11AAA39979F56866DA46E3C76EFB1000F7A204703784765CC0897C215E98F
1FC465EFBA41D87893355A8E4775309D3BA71400CBD589E9DBB972323D46C79271352B4DE9A343E659779457F083B53E1195818223E552E87960B7E8BF75F14D
1F2AD044C866E80E791D47AC31451AD52605593C1EF001E892B42C81F2E5B68A5DABD2D3F27883122821D6A4B63BF19E1797F75D5480DDB6B3B210A7296C9255
04C588CE95D8117ED3FFA2F2740D635DDB2DB1DEFD8EE01DAC9B79B822722F973A52F9EDAEDF0C8660FC8002DF8B6813D899007C687A2DFC0F27F568DF9FC644
D443C050B9B55C4ED46D0443D0E3A659254A2E77995A89EBD80A9D242F5A7F5886D33006FAAA8CB35BBBB77EB74494B04F3C775EB99FC78E60B9299C711D57EF
C4937CECF58C6251C784BEF0C29114001695F5AC52D8BBEC4EEE5E378F105D3CAABE4CF2BF8F26C34D1DE6BA96420EE6233296D85103E69FACD0E86689B6127D
21B9A3F53AEF31C755C49A14CC1FA7F2C654A88EA78098F33FD1F97F536092619E221C6B9F599E6F445DA1B834B6FBE9BD331C7902D4D1763AC81AAA95D2FDA9
BC3E51A11173FE32E7284461E1B611BF3EFFA54B9C932E2EEFCE4C1967D4F03733D908B0A27C625AD35E2C8CF8ACD629D5783616A9E1219F90DC6E4DF209FF18
6954B27B2D8760901A678FDEE4D26A8AC40B41D82F977E3C753992E7F6BDC2E5A3BE51D25BBF4102AF6C137ED5AB3D88F6E5271BC41DC9C77E972329679F0C83
CAA249288B80D830DBD21CEF817ABE89DA9F449F1275725258CEA1319A7ADE2085AEFE1A499E9CBFCF43C7E8301BAF24664BE5B9C3C9C1CA0FEEA025B17B1AC1
E660EA2A6F53BE874A8A0A5A2E7F93FE4DA8EF979639C71E63F8B7F47E237D3DE635B3C91129F8F6250CB65B980BB62AEF044CA2FE9DAE664D97C2AC2D5DEBA3
DB7E7F592C9DBC978085A9BD0843E588E2BDE017C5867B265FF4B370A81185BE9E66EA226E57F9B1BFCD62A566E2B587F6D1396E260DCD40542330BFEDAF5689
DD0CDE0E401E67A02C13BEC0EFB65BDED2083E52B1456342267F355DE8311F0BEF652601E0BF27A137729B0F599085EACF0D6C266FE2ABED8EC4F63C7D64DBF7
BEAF19B0E95A3EA78662F5D8DF4F8E823B9810A2BFCFC92C7D7120E4105D2E90AD4898A3CFFF6EAFD25BBD00C3EFB97B24F7E43E7975C2929BCE68367FD423F3
67EFA33507DE3F6F1EBB5F340CCB7682F53961E762AAC7D44084481C358DBD41E9D3E15F521864F16030DDCA496F2A479721F4E9C39418D1014B92ACF2CDAE9B
4334C1395FB36F6BAD84D554953A49C4DB41A728D37CC1389C9AF0AE5EEB51D03C990E5DA0C3F72A0414BBB01E3028756E383013B4B961DC681A0E7A00BDE0E3
5A97FD4A74C40D015B5108D7C06B177F6FBEA5AB586373C2A5D7623C8830796D0221B43B2041E047BEB57613F843011AB4D7EE2E355149F895106B29A74C6D77
73B7597BBA5C181BDF5B1041FB4FB2CACD337C6A302DC9797120F0BB9D6BFA60091A8A63C69004B2E07E4201F0230A0FC9BE4B6C8A6A90CC350A8B7E3D56CC7D
529B04E2397E4A691F6D09938E95226E9F567F5ED8B8C46EC5597907F96AE5731405936D366491594429BC05F124E82903EA104234A321A21934CEF56B11B941
0A9B5E1E60C87C42DB8589F5BA17B69332A3175E1A51EC694CAB017AFAE0D49B1711AF7F73C6D19D9C9C3CFAC2A69C3A870048BDD9960881C74CAE5DC36F4508
82E8FCD04B0C7D9E5A3CA420AE8799A8F59636C8DE8BA3CF004EA5E9F8F63226BC042CC4AD83BC96E9DA841B7C6F565D11DD8847271CEA0E3BB9F02E0B69FB89
47BE7EF29CC2E5B73E26CC73FDBB8712164EA7F2EF5BD0D8E782F5336E326BAA3E3B9AC4F7CB72584DCE062AF9C515FEB0CDC7F09AC03ACCFFC6CE7CE5F294DE
7D6F9610AF059E79DCF6244D364C5AC80E357E4AB9A5214718C4C4E597A837F2986F67CD18FFB5D215EABB2FE7668AA01CE59F7500D4CECF1F5046085512DF93
D4E20E232535E09455E1E7157F041FD453EEF57C577836DE5FB5ACD5C0790F5E8CBD6049294D70AE46866B2AABFAA475489DEE654F7E4C28CB888B35B5C6BBC1
BC6D29D17A2CB79F22FC2618F810415BE09AB23A95031CC69A7049B58EC62F4B3CE5BD615162D06D5F3954DA4DC20009F7196A28FFB90A10C845F586E01445BC
BE49E4A175413389B40F5703EB5D8F91C558E169BAEB139E6550EB9B4A6E1FD299C981CCF523BF79954F0B648C797C038466C4B7EB923DBCE14EE19FD8BF2BD9
7F7BCEF2D57C64388DF6DB9DD9725184B930FE0429813ACD0E69B573B0DC577659BEAC8BCEF5C453B820964A37A7A8497C8D50D4B530AF620C734415B5FF07C0
6BECE63F0D5FE35AEC4FAD88BB19BBE6C7E7D91A1D3AF8726ECC7A7BFE7806C993E3CCDB0944E66FD7F65A1A4991D3FA4135516A9D63DEAC32CC2876460EF3F7
5D22444DDAE35DB515D6654C6BB212C329BCACCFB59DF10295FB8586414AF4783257C72D404A4F55DF3640E9F6B1C94AE94F31CA2874328A1D79966E2C1C36F1
9A426B8E99585E26EC5E56A8AC73B30CD829449703361656ECF8588F4DA2AFB53F6159A2944E9D1D96763E516297FA931E385C08C2EA502D27FFAAB52DA79E78
4BB32451791A1B4A6ADD21FC65A9609DB257828D2461AC3F8417507B2D63476A4619F1ACEDF66103D8D5B19E1F6EB638F34E0C91A58FC1340DF30CAC35D93D5D
2C5301884BAD49BA89878CB244126A4E2BC4D66B4E2A397B47536E1F17EE362F14F09F49E756EBF15FDA60D084B96D71D2CAA4464E9817AACEB504C2D95F4E43
637977789B0DA37CBC5905429A1D2B1E06D4E97B805A16E5452218D423BE9D87E54065728926A1C1F37205E6EC8B9400E45237103C721D7B521DEB94FB890B81
60714860613EB4488C2250B74233D87289ABE42AA6DE73C8424770CCD1E48EBE1E10109EF6513AE9D9FB18C1C3532CF83260A1617CC743AEB1C1BC7A75809A53
871C9B1C66713B176796BB2E7F6E26F4A883316BC2E21302436B45F7A2EC4068AFE20E4E6869D78ECD519DBA1F138F7723CCF53DB6A5EB88FB1F0CB6924A42E1
09B62D4053883C11654C1F2B4910DF7ED8160B4B1F2A81106F346D01D592F68DEC11FC1FC5BCB709D0FA96465AB1D1E797E6EA40DFB46B1438E598AA08BD2A39
7CAABF1CA90148955E29AA5956A9EB37237F2F3CD48074004B535E1218C7630BC5B120B9F70C79A93B7F0E4D8F10D503F4D1A6295C21A3268AF85DB7F9C49977
598999D4AC5AFAFA0DCDA8991B466B96EA9E2218F65711DE98FC7BEB20551ADB05D34D0360FB42A7BD0410D55B50393A950D811EDF7C72B24B989B8F539EE8B7
96E29322BB65EECAFC016483B13209FF1ED30408ECB3773A81A8148D54C471015A439EB2420DC2829B2D80F8D2688E80E5D95F2F8DB1960DA6E4EB35B08E350B
343EB6F7BCB95D7A2606D37875860612FE353B13B551FF8932C80A4C67E7C7EA5434CCE187B7306A8B466F3C6D457066527C85A7734FA3456E3AC1884334DF22
05DADC5C7375FA9E12E22BF94862D71272397B65D4C5B0A353F2268F166C2C9B15386BE74EE4DB56214BE80DADD9995312E1C9F00C734902501B02F0ED5C3210
8B8B70F715C3C52B31832A574AC7474D68DADA7F1EBF6282D604D16CA9CFBE300CD0FB0541100B91A733C2F2A081FCCD2E8040244899C0DFD608112B784B611F
1650D94FCACABEDA0B2C85C88C3DB1EA0A7C6D3DDC0B0D0107BF15C29B151A24879F5B45F8439036029273E87236792958D771F42619D5896ACA152A906B73EA
FDF13F2BBA80989EE8B9A91A8DA13A242BCD6D02B577E88A8D197F3CFA5C44C44CFEB6BCDF35D7A797A97A653901F554A7EFB8DCA5779E09879AF0516397EC9E
A66CB6C1EE6CBFD745FB02C9C80A86E63F93866B627D17705CF19DADC5E83F7C7A72BCEAFA7C4E7862DE39171C45B2B63F5CA4CD70A38BA10F1A03A2278B48E1
489279388E4FF357C785E21584C11A30A4FC2741D425DC955EFADF37CADA5491132711435A16461502ECEBC26C332A747A7C2BEA55B4B31CC14B3953A299816F
154BC5351136E8B6B546E504B781C0492E2B9A79FD31A37F63326E0AE66B301F93112F6E46C4AFE31905C1CCDFEDB9B127A3F8EC4202F352814BDC6D1666AE43
DB80A5BAEE9906A0E87FBEA4BF662EBC8CA6B8B6EA81BF33A53805D386B3B6DA2AA51FFC3C2246BCE4C1442D37F3F8654CD8CF62A63945E10C92CB2400CCE13B
B4458A4AB181A705CBF218D4F9D99E492770FE828A180D91E8C5902FF4EDA525F861899351793C4F4410457003D0AC080B0211EBE55B650022360930BDCB2001
FB11EFE9975CDD21168F6FC1DA307C7D2853183AF715825F5A49569F6B5991338FCA5C37E1E8C27019DA9814A1C300689F9D9DD7F978FBDDD9B97A574CB667E5
3BE8F086EC32C9C6E3C496C3801C03E6F3309E17FA0E3AFD8E8C4B831F02083BA2EB7BF04972E327031FCC8D9731BD2E6811858316A59A28B3D7D9D78D0F8F14
485878794C1B1E3445301C5B03B7D72F54393AFAA02B1BCC2CA9FBC52ECE9EBB2EA8C035E6C8C9DB2251E9B066C5815684C7F64702B215680D26B5D73EBA304B
516E00D6F6B675A6600A72E4BEE64F00C23601FDD91BB2F3B313CA0B00B1132A3886172ADA0A234D805CD95B2A
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
278 351 833 500 833 778 181 389 389 500 778 278 333 278 500 500 
500 500 500 500 500 500 500 500 500 278 278 778 778 778 472 778 
750 708 722 764 680 653 785 750 361 514 778 625 916 750 778 680 
778 736 555 722 750 750 1028 750 750 611 278 500 278 611 778 500 
500 555 444 555 444 305 500 555 278 305 528 278 833 555 500 555 
528 392 394 389 555 528 722 528 528 444 500 278 500 611 1000 500 
1000 278 307 500 1000 444 444 500 1082 555 444 1014 1000 1000 1000 1000 
278 278 500 500 500 500 1000 500 959 394 444 778 1000 1000 750 333 
278 444 639 500 750 277 444 500 947 382 667 667 333 947 500 399 
778 347 358 500 548 639 278 444 301 377 667 750 750 750 472 750 
750 750 750 750 750 903 722 680 680 680 680 361 361 361 361 764 
750 778 778 778 778 778 778 778 750 750 750 750 750 625 500 500 
500 500 500 500 500 722 444 444 444 444 444 278 278 278 333 500 
555 500 500 500 500 500 778 500 555 555 555 555 528 555 528 ]
CorelDrawReencodeVect /_R34342333-Euclid /Euclid Z

%%BeginResource: font Euclid-NormalItalic
%!FontType1-1.0: Euclid-NormalItalic 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid-NormalItalic def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 120 /x putdup 116 /t putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1FBAFA534B3439D415C1565DC15D5C1576346237FE40393FCB7509E5A491A4FCFE2CE81F53315B626CE1DA
7A30A372C20F9AE1FBA5A1CB391D19B37623E0EAB5369C74C129E2A288302AE3AF46CB14BD2C42C1135929ADF356F8E5370D669F3F63C67A529657409542F571
112D8E803DD1657CF96BE21A9F495FEF8B5F802BF21E294AC1936DEBA9EC852D0CFD5E03DA98C50A392BE5D3FB42DFB54E70784F0F29F2CA47B0B75DB60CFFCF
2D8B5DB5256C07A3D7630A9E678B722250B0733489DD144CEB56835A61B796C26FF28D86242E4675A3DCF55ED4D05A7DEE6F0A0489CE91D934112CD6E236F806
8C074FF8C92438E71AC87B864E72707284305DC45AC4BC30BC35DFA1B91F48E1255FAD7ED97BB9F6E7B83AFDA5B9627BB02FF9D39759E53A97101E931BEED2E5
94171980FDD83F5C608E4D41AC5B77D6430B5690F60025C4C925B85CC7AB85FB20E545F63B29002BD477F0029A0545850D37352FFAF11839773659463F85E3BC
F2A075C0B2E9E933F3B0C3B4E6D5E95266A0585DC9E30B4606223505AF2A27885C85818D58D9588B705C24F5A8A8E22B20B43FECF80D8CF8B96B4472CC6234BE
CA0509F82716CDCB37755063CB4A311468DB0841AC7ABD98C235B0A03EEC479DE3A4809E0D3E1A55CB83F474C079A1CE40DD3D99E6FE225584A15E3632293C07
45EEA835C8A8976169F4F906FD8AFFF9EACAB142A6275CDCCADF7477C977E5F5368AE226A7C435A95B536419B93F7F88E7F8D751425936BB1F55E2F62F06254D
E283756EF391B18C0A20235753A2F30247E8608AEA8D82AD13D382FEB5064F8636BAC4AE2D1EAE2538340E43B42B4E8F806831215CDD5F50D5646228F3ABDDDE
BEE431C7DC249F5B2EE0CFC030D4351C16A29EEECB57E9099DA7E99458272FAE8A42FFE25B3DE74987CE1B6E80DBD3F5C379AB7400767A1FD0C95874357F7324
B657E8E1B7DF419D210A450ED37E9DA22B6DBD537194789FFF8C0E9EC85AC00BFE6DC05116921C829FAA800ADB8F61CC362BBB2E983C6318C4D0D4F3BB700005
6C20977D54E7516791078552450FD2A18B02F2325CE19F73C478B4346B21AB2FA37AF6DE863C3A798D5DEF51F0259D3A475BDE0C20C3297BCF35846F0C84F19D
E13151ACE2F8B743DC87BC8407F724F1E52A640C9C7E156EAF58DDDE21189DEA677AC299EB0C1DB65989F948072569A32FE01E964290FE445B07BCC1DE67F479
EE9C61643B41212D0F4B7A1B8DC873D1CBCA823F7AB40158453A7124D1F5D0B4BF79445D041C24C2C93489B712AB94
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
307 413 818 511 818 766 255 409 409 511 766 307 358 307 511 511 
511 511 511 511 511 511 511 511 511 307 307 766 766 766 511 766 
743 704 715 755 678 653 773 743 385 525 769 627 896 743 766 678 
766 729 562 715 743 743 999 743 743 613 307 500 307 613 766 511 
511 460 460 511 460 307 460 511 307 307 460 255 818 562 511 511 
460 422 409 332 537 460 664 464 485 409 511 278 511 613 1000 511 
1000 307 307 514 1000 444 443 511 1083 562 460 985 1000 1000 1000 1000 
307 307 514 514 500 511 1022 511 959 409 460 715 1000 1000 743 333 
307 459 660 623 908 277 460 511 947 382 664 667 358 947 511 399 
778 347 358 511 603 639 277 460 301 377 664 750 750 750 511 743 
743 743 743 743 743 883 715 678 678 678 678 385 385 385 385 755 
743 766 766 766 766 766 778 766 743 743 743 743 743 627 537 511 
511 511 511 511 511 715 460 460 460 460 460 307 307 307 307 511 
562 511 511 511 511 511 778 511 537 537 537 537 485 511 485 ]
CorelDrawReencodeVect /_R34342333-Euclid-NormalItalic /Euclid-NormalItalic Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
281.19969 654.91342 423.66331 654.91455 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
281.19969 654.91398 m
419.28860 654.91398 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
418.87332 657.54879 m
423.66331 654.91398 L
418.87332 652.27918 L
418.87332 657.54879 L
f
@J

@rax %Note: Object
298.65231 643.40731 298.65345 739.84422 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
298.65288 643.40731 m
298.65288 735.46951 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
296.01808 735.05424 m
298.65288 739.84422 L
301.28769 735.05424 L
296.01808 735.05424 L
f
@J

@rax 287.22699 724.36989 293.56696 729.80589 @E
[0.00028346 0.00000000 0.00000000 0.00028346 287.22698162 724.50195775] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
0 0 (x) @t
T
@rax 418.10202 639.35773 422.58189 647.00164 @E
[0.00028346 0.00000000 0.00000000 0.00028346 418.10200045 639.48980338] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
0 0 (t) @t
T
@rax %Note: Object
356.81443 642.31143 356.81556 730.52929 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
356.81499 730.52929 m
356.81499 642.31143 L
S

@rax 362.29436 700.63654 467.05521 711.46035 @E
[0.00028346 0.00000000 0.00000000 0.00028346 362.29434895 703.13241522] @tm
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
e
/_R34342333-Euclid 42333.00000 z
0 0 (ligne caract\351ristique) @t
T
@rax %Note: Object
355.17118 685.05052 358.45880 688.33814 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
356.81499 688.33814 m
357.72265 688.33814 358.45880 687.60198 358.45880 686.69433 c
358.45880 685.78668 357.72265 685.05052 356.81499 685.05052 c
355.90734 685.05052 355.17118 685.78668 355.17118 686.69433 c
355.17118 687.60198 355.90734 688.33814 356.81499 688.33814 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font Euclid
%%+ font Euclid-NormalItalic
%%EOF
