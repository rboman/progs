%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 283 464 498 575 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: hyperbolic.eps
%%CreationDate: Fri Mar 07 14:16:11 2014
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 14.0.0.701
%Color profile: Désactivé
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if/patternScallingMatrix where{pop
patternScallingMatrix $ptm matrix concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup
/$sdf xd{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd
/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra
add exch load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq
{$SCA}{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2
copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup
0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor
exch def convertcolor get_devicen_color aload pop convertcolor
get_devicen_color_specs CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse
/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll
dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1
roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1
roll pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font Euclid
%!FontType1-1.0: Euclid 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 108 /l putdup 105 /i putdup 103 /g putdup 110 /n putdup 101 /e putdup 32 /space putdup 99 /c putdup 97 /a putdup 114 /r putdup 116 /t putdup 233 /eacute putdup 115 /s putdup 113 /q putdup 117 /u putdup 49 /one putdup 50 /two putdup 43 /plus putdup 45 /hyphen putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B19F4E468F0BBA3CB0D39633C5E72697C1F3B16F5C086BCD78EB5D831EDEE81F749131A03ECA411F6EB0799
E77EE489960F3F87D784BF67464FCC90EE1DC616565E94AFFF92F6FBA9046894DEBB6C77F31BFE8E03E6207469289F9E22462A0511798479AB001256CE335E0C
4B44ED7FECAEA64AC99B3B1AD875D3A9878C5B57E4AF8DA81032B792F57D3E12C32193D27AAD6FFC7275C229F75B3191C3FEAE65A85035C369BEEA6CF1F60009
49E922F8B8CFA1D4EA316B56F1B336509DBC1820AEB4495C8EC538C66A6150082975E63530481827F829603B32CA58F757438DEB13F1334AF13BEAD348D5A15E
9B648BBDD30664CC5CDF0FC99E9755B8DD2D248FC75CF898D5E3934026DC694A65A8BFCA940AC2BB43CAE78F155BB65E7C0416D591A7979FEA1371767AE1BCE0
B1347354F7D03F4A708009E6A7238722F56FFE1239B3A171FF97CA9A7C7C0FC04FE4C7FB1FAF9E91ED4A4996E73051E996C92FC0FB4F772837C768850E858699
2D0375E3DE84C7CA0C6B38F0527639EEC0FA52BB1A0CDB021C2D2EFA38AF9660A2D13C650C143BB85AB8EDB345CA6EC14EC88DF43712B5520D3E301DA1EBCC25
C9D8E6B63EC02421E971DAB35115DEC28CF6717BBE7C7E333EA7B8A21D97442837F57930D1AC0271998D624A367661E4590DAC3C665CD19A75D5A38E51F48109
25969B9D205ED3DAA54CBC6B3D77FE63506813619379D655F9E207B98CA98AC6FC2D84C5A7291EFFBBD3F1D472FE5CC647F001D1A9A578A4AD16403CA1EBF953
6EE907F95C44159C30B47D2806FCA1F9E22FE4E0ED93E9E73FC65FF7AC3AD1A55FDB3785E3329358F96D073069E9E3C36D9B7799BF7A2F3DE313AB898FD59BAE
FF77AABD964677F67BB59FDE02DB80A47AF229EBC4CF4C1DEC9BC00AE6049BDC1E93F5AE7CC17B09B09AF895BFDFFAD657203DEE620C51EF9B7D5260E7CD4416
FCAE33D66EC096DB78323270F7E32183CB4DF4A4C66AC06C13198436724C17932E6605C8BD7A42004C15F81E0B55B1013BD6FC3A77F12A8940AAE8DC6EF0B943
57EF6BEE7F758684BEC62AA2E9DFA48BF08E89E8C6DF0727FF4BA2972CA205C2DA90FC90EA3167F68CDA6D1E0E43D837C74624C1FEB236509EE1C1ADD59FF4D6
269C9E342451507F64A84512DAF0E3740289556494F25D319E465DC5796BB03619EF89F9A70B0B8CF637F0713FAD63F7D74552D983984A5A080F10BA20030BCD
D2124605479E9F8D2ED4677443003CC944DFD1865848B7BC8E2FDE912933661A274069EAA01C04CD0C1B714E81E1F218DBBD1AB3DBB1A875CA4EA54B0CC95DD2
FD7D4B8BD066140A916ED0D1705ADAC90F5E0EE5053B0344663C23F93CBAA1E851A474DED2644B256D6031DFEEEB685D28F56912DEA5A3B04BF8F4489AB2764F
5C0E7071A70A7247962F3099B1E4252F27565C0F19C70354F09649A926B8B6FC1A280556C46792E85468EF75D162BD15DB1D032B0A1CE06E4B5EB2699AA2ECC1
9ABAB690A07B6CB4664B07AC2FB9ED88BEF7A5A16A6804A4FC2CCC3BCD07E21F0802D7A207B6087C583649E7AF475BC44CDD0CAB01F424286AFAAC9B5089EAAB
8F8DB67EF08F79EE2401DDE05E61B8DEC9E90A8D3034CAE715AB1AC0A43D8F2A999EF735D1AA534242412599BC755D5A831B3973C5CFBB6BC28E386F0FADF31F
9318FC673E90F6AA45534B049755CCF24447291DD3ABF3310E67C064FBC135DD8FEF73CA886DDAF2EB6E1052F7B8E8687D9F9D784158B99390DE1BF0F04BF974
40D1632788D9F42B536039C66556A133309F5CFCBCACA8CC04EC8E75FBBD77349CF1A3752DAC6155F6EA1BBADC0BFC274857B8240C76B2AA4E014C7AADD6202A
8F7869AF79C5396FD243CE90B4D9CCF910864341F8450368EB5676F46C76541BA1C3088224A0C68E7E3EB6D9C955410B2A5F7436FF09F48CA72BB56D776F8D9E
D79C76D32B2138048BE7D94BB6675A9A4A05646AD21CDD32575058D5F151D5BE580854C8282555C563830C6D0D15F07F83CCB49968F7B141F8E4637E6B75B5E3
F04F145F38090F8FD7BF22A45201C1F59434551FB86846F1FDF6C41382066FA4DC1E71C13FA33AD53FBDE36490BAD4457450E7AE8526518CDD613A7C423B182B
EAAB56E24D857966A8DAED70ED29BDC05C74B3CCEB2D50C3C143E18EA26A824DA729A8802E7B3B8728F20AFEC25AB53C69F2FF94BD2B120ABCD4AED743BBDEC4
94EEF7E0A5F0AAD4811FF59CCFBD23BC075054FD0F8983C84019F8809F36463E0EE51895F3B3C44AD600C1BCB70A6430F5A500EA4AAF9A74734558C831B45CD0
40A7504EE433A2A2B3DDE79025FCD6DDEE1E7876A4A7F69ED96898F702891A4010B68836D996E86B76949219D4C4BA2279C4884D7A49B51388F55B755E256174
EF35D857DEDAACE81990933C0AA3813615063EC8C7565C602005C74341EA2A89E00EDE1216FA1AE6109E5F666F7B428810853491E9095AC6977F09727800D50B
94C2F0D699DE1B4E9FE6621386A016C513E462C1057A647BF768CFC2CD5C60A865F67B5D2514D1195791942502E49A57182B66314CEF102E4322FB6535033774
B5E70C2F3EDEE6A320EC358B8A07EFD3A877D22E02CC48D037428EA0921E0C97679438F70E94A51E1276484CD9CACB23EC6B3F1A81E3CA97D783450D4434FE29
136AF99B5BC6B4CC7D68F46F597DA3DD84D625645801BA3AA979FEECFADBB19A7688A2E5530D7D82159935CAC71E407DC37C9BB32C0F984C25179066501D2AE4
FC95735A0E6C42AC60DA06CBA4A63A338173AA1EABC82FA9EECC338464B082A3283B6FF6C802071EC0192CB1AC242FC049D32BE7C8EEEB00AE0FAECB58D5A54F
2BEFDAE37596A47AA14BCC64F01CFCEA020C0C036E929217C970643FB7013AC96B58C13069CAF72FDF35DD031A989F3E28C560D1A6BC7F492D51CA7715258CC0
0210BC57ED6D3173F6D13ABBF919E81C675E81CF494AE45DF906CA4ED14E698EA54450A10E084CCC8A8B255996787D68625954C5B954F72D8F5D35283DECF9F1
BDC74B74BEF0F13A0D34ECB02363ED616C2396EF30E8A9A6FEB7357D563028CCCEF9F3719AA3003495EE993AAD8F0A73156E00A4FA8E1717F84A5D097F62E81F
88DB62E1369C28F1D2586C16D32DA9C47F87A6148773D3526D259F3631CB6D657E4DB81B010AF7DC796F98B6AFD4BEB00C70FD6923F610F283CC4B49E175C02E
BDD7B2293C26A9EEFE607AD0BEEC6AC0ED4788D8BCC3DCB940B8A8A3E9C4BCD4316D2D928C6662F52E2A912638C9B6D6CBAFA3BF78DF29DCE94CB7AE4276F145
16BB8B878B867CD1063059B917E511FB015E4E5A846DC7E5571E7544410D6DA08FC1654238A3BB5B9383C6C4992DC245800A734B0092349FBDE29FF198EC4EEA
C62B4632A19F5D26A632D22EE5E3CB219C57A084E6646B40F1D195C59EEDA209A43D58F2FC60992A497516CD5E114188AF834EB9D95E0426D431AECF0A941F96
344CAEB9FDFF91BBE6E40D386601D700FCCF9F39E88D549D4864043AF79565473E9169CDFE3B154DE4E398929BBE4306B35A37FA995EFAD85616C37F04DAA5A6
AC31D7825169A674F9048F82A78CC22A0D7BC4912DC67BCACB0171D1CF78F448E7F6CC46E37BBB01B5CCC147FA5C1F035A9CC7C8559AEA432725102FCE3AB9E0
E2C45DFC60631DB83783D46E9D26E844CF07D334BD9F3D97B296721AA04590EE8F274287DDBCA16B389C946D49F7837D94AD01B87DD301C488F99912E5DEE672
4519819EA6BF1D2009EB97CCE19363D5E3B307B2834922AE713746F9AE9BDB85A4DB2973C9691D560484BC7835C427F6F37E60409864DCB45296E1DD968B227B
90D51F5D51E641E4C68CC2071D5D873F5642BFB4A0F67BF5083A4E67F84223CD7E845AAA4A69A73A72E11412994C413A184284DA7346B6A8F8BE2A12FE5E6DCD
08A2B5F750F955C2A45B37C3EEC8BA0091EFB77EB2968BF7CB50E756A4F7435BF0D74CA5445C26B3B6D91974DA7F35D493F9D8EF97789B874BB9113A12A53DED
03E23D8FA9275BC84135D9AB7EF54B685F332C77AF5CB561E5BF0AB3DC96D9D0D772FACCA3B1F4E2C3A96E4A7FC9715091CE02365ED016D4BF3FB6F897AFD76A
A8F5A583CF1FE526B57543902A5E875D75F2A149DE6416A2A8BFF789FA5866DA3CF02D7DECE1AD26C793ADC4BA5DE7441D4B43655660863A354CA554C676710C
1E9FEB1838E726C40D99DEBCBF13B83B14D05515D51065765C1681E9AEF1AC9A39E057E78D22BE7DE66583DC5BE29A4E53457CEA723C145C201DC84DBA86ACD8
272CFA392F663208B9C8ACAB8D30092E1724F288FA367C0AA856A7104AB4C2454C053B6F576688AA807827243C22B945382DEAE3C302171C8EEFDAB5CFC28B41
8776BB4DB5A00ABEE469A427F31493D9F365E949381DE84502BBEB3D4DD7FC11165947616B1A97664488AC303BBAE609909BEA0D29484CE34A085FD0BB1E4132
E03C305E06C8100A96999D308B7F9A4CA51C12562E4B9D055DB7DD436ACBE075F09E784882E15A2474F82FB86D4D0ABCED1279F03525EF83739E60A738BEBA20
728EE0482D3BA6A8E72D416F8D6D6265660C3F1661C2B3E00DF5AE6BFAF90201FB4FBEA2F86F6C37C58E3D1D950AB2049592986E846403CC578DC4B24DC26888
803AEDF19C73D255A3E0E077B552917EE75AD2D1999983CEB7A62948CFBE5B896F8E8536DD5A135B202E0534934A9EF381B6C7F205A13AFC6DA733458AAECD16
119D416AC1F8E5086F918CCB9A3549D2BE191052A10F0FBD08F15244CE12A64843A448BF68C2E922EE6BB8DEEE01CC0BB0F6A327E3ADAAECC8D390C5F9D87D42
0A32A3B29EAA7561E18822CE288FC9882D771AAD174980D16BA472D693E1AD19BDA78DDDFBCED711A947631DD0AEF67D3876FA6B824BE7160373DE88CC091E42
71EFC85B58DAD008B33C2A35101CF2B706F6A0F56F26B5542B8F49AED48860DF9B33824FA69B2C2ACD6A97ED4D411C0FA3B2C96201DB3088149D7AE3E7F60DF3
628E388B3A5162062193A5D90FEFB89BD62275690145B612D9E447BF46A6986F439B44DB272C848B00CCBB416F07783F5491FBC0C00CB718E77EB31FCF08EB5B
A8C55B9D1AC1DFF0D6DDCC3AAB6BDDD8A3BDCD538E28F36182BD66E0500B243D4BC8BA13AA838B9E647484712F425102C46CFA70EE4DBA819468874711994CD2
3973E16FA3ED8CE0F83D386032D17182879AE80578E0E741CA70B1870E08057CA51E3E04EB9A3E91D15B44642DB8B129DD60C6539C30E1589BF8EB733AC4841D
01CBB9FEA427DE89A7A3FB299CB86B30C48CAE7CF80DBBFAEEAAB40061B2713444BF1AD9AFED5C204245037038C67CE98A830067F094D0215403BF444C69523A
1D63B894E9D8057130FBA75CE020BB2D4C756E79159A403B0F026A71DE1FADCE91127D9B413A449F1B128336F0646244E9911B76C6A9D8650A1D165524B1D04A
2C7D004DC02770D553ABE0916CA659961FEE93495BCF01F2A65B2488F51A8A8AD6BFB26103F8A56A0BF99E9F9BEE3315F99039823B70D145C9F8CC41ED2AF67B
A2580885B5CB48BAEFE145595FAC7F90DE6461EAC994F913400CB3FF6078269E9C21202E7246252B4403C7A49D7DB67E163124B548CA7B30A93AC5CC0F5DA523
348FC7423FDF2F4F0F951B8BE4698ADF684128E44D62650788E60D610A0949CEC2B31D8AA7E5DB0AD9418FAEC6BFB6B97EBEC055C5A714D91D10C2A4A68AC62F
779A49EF1918E94B1358A726EB81EF02EEA91946DDB67D60F118A8EDA286AA4D962FF09674C4C4959112525979FCAECF639A3E14312BD7AA68A92851B7AC9177
A3E34CBC9D934721457D2E807CBB9C6D9AD188870183C7D75610242D5DF7BA49A8AC7903CEA49AAFD2E71DF3FF58D01E8325AF62467E9571B1725C9D61E9E845
4AF429B22D927263E234F3EB07DA898557B250D5D909DED86F3ACC8984F6EF00BF67877F5851F9CF0FE55AC2260EA74E53D925D8773EA79AE87C9108B3DDA432
7746F08F3E6EE44F875E3B428E58FAF3B75E31E239B59C1B4F0849F3B17FA0A494E793A9B08795CDCB543D6B3FAB0BFFCE731DCFF4294D59E0527C99D6DB5E56
02369026AF548F796D0F1741E9EC04C98DC15FF6120FB101C817CCF525030BDBA2939FCEED345C4AB3BD80B49A76FC1036B70D01971688B17AD498BCF79F2F9E
AAB8BF869B84969CEA362DCD696F061B6CE4732C6E5AA19BF1174177A5FFE63503D26035406BC206EAF77862D01625FD857AF0D0EA56B82E6BA3701080C2DDAD
D73539CA280A160518E413A137C4C2B1A7DEE7A456237388E00E81960C14E2C61B5B1A327CE5AE26E34797EF7FAEA1BA052F0ABCB3256177E34FEB662E8CC893
89A481F3A2954181346D29A6370A00EBC4F8E81E0C6126F533B3F032B2707E2856B281D0C9EF8A4061C230EA6B97D8D7BC8C7F27AA74CC7ABEC886E6BDD33A6E
CC3C873FCAC351ED6616CC77FAD2115F3A53EEB6B5455B0C85E296EB68D3D3D371530D04B2F1B76EA810027F0BD40D36D87323B8CAEAC4280CEE9D3DEFA216BB
304BA9E6D06147196FF8CB588AB8A9028BB3BCE7E19C5585D9A416E5EC88794AD37FD082A2DC01CF4439B27385DA28BE8BABB05178B21D86AD80735DEC28D75B
BAF38347761494BD6CA555E3E5A38241894E9DBCCC7CC8DE2BDAA41C342020DE1C964F4C69DC70FF66731689C6EAA7EC0EC74904A189ACED865146F88F8058AD
0B692F2F6F02C7E63E641C75081B92548EC25D89974F6F1635B037A22216C6EBE1FEF5975F3265009437D7E03BF686C7668FA4A647A48BC8AD37C052BB1F0D1A
245F7FE0ACF9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
278 351 833 500 833 778 181 389 389 500 778 278 333 278 500 500 
500 500 500 500 500 500 500 500 500 278 278 778 778 778 472 778 
750 708 722 764 680 653 785 750 361 514 778 625 916 750 778 680 
778 736 555 722 750 750 1028 750 750 611 278 500 278 611 778 500 
500 555 444 555 444 305 500 555 278 305 528 278 833 555 500 555 
528 392 394 389 555 528 722 528 528 444 500 278 500 611 1000 500 
1000 278 307 500 1000 444 444 500 1082 555 444 1014 1000 1000 1000 1000 
278 278 500 500 500 500 1000 500 959 394 444 778 1000 1000 750 333 
278 444 639 500 750 277 444 500 947 382 667 667 333 947 500 399 
778 347 358 500 548 639 278 444 301 377 667 750 750 750 472 750 
750 750 750 750 750 903 722 680 680 680 680 361 361 361 361 764 
750 778 778 778 778 778 778 778 750 750 750 750 750 625 500 500 
500 500 500 500 500 722 444 444 444 444 444 278 278 278 333 500 
555 500 500 500 500 500 778 500 555 555 555 555 528 555 528 ]
CorelDrawReencodeVect /_R34342333-Euclid /Euclid Z

%%BeginResource: font Euclid-NormalItalic
%!FontType1-1.0: Euclid-NormalItalic 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid-NormalItalic def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 120 /x putdup 116 /t putdup 99 /c putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1EEC317BEA81B35036387EC1C16AA4B22B49183B9D4537448A93F3C667D0BE2D7B2A4443EF80DD1B8C1DE5
15746A44C4D33AABC6DC7ED01BFACBDEEB9B00A2ECD3BF82844FDF87C757AFB00515C42005B989C0AD0CFA49CBDF8C91BD2CEFD00B46DCFEF35BEA1A01348E8B
6096006CF0C045D57CC8905C1B9D6DFB409F524AAE39AC710C9E051D9867B1C2B56D38FD02EE24BB117E63D76903E2A2530DCD794374A56F753A3A6284E0E992
1A8AACCC6306AB1DF3A4A1C6E15BDB6D181365FEAC9360CAB63E502B982E0990B19E77D6BCF0FB7963FA4A636F482DA10181274052DEA7D41E36CB9AFB11B5B8
909D8B34180C5F1ABAEBC92A3064261AF99DC59BA1DAF9D59DF7383E3605BC0999F58E53F2ABFDD430DACE402C59B09EB7DFAD78002877FCC38C0F62C0284088
52FAB57E52174EA63DC2261D28A8C8C6ED873A06092D3195B027D83418B655A7CFD5C185B22A081EE64CA84940EB7B8322A5BC560E29650696CECBB397F6B66D
A2CE78F03632933F5752B5D0E9749757716386F2CDDA0FF50D6369E0FA50C67B7F9CCCA65E494C89D00B361B8B7746937E9D354BB04840787C99E5A9F4E2203E
87191A2AD6FBEC70CD2B4FABD70C75EB29E2526CD8C93FC31ECFA2EE8F6631E446E59C531F69C60DADA9968CCF53D9718F9E0524FD7A65A5D77BFC0E6EF85679
4A6E594A82E839D915BE060E24D46388755FA21C3D19AC9BC2033C6977AE81AD77B78C5F7B2B909F7D70830458934E7D0E408B6DD9ADF35CE813C0788BAF85EB
2AB80728A899EA395576B09ED07C8799366D2EFDD1C72B66F39B7A33343980D50846B1382F539B4D5DEED0F54E08420890251137320866D12E06E145F2154341
44B6DE12543162F3F8C06B1F36892AA1B02BE56A0F6A25CC3F31F62BCC158991E6974CEBB89320B8D37458FF7F23A8ABD3DE5E63DAC2DD5BCEC90E07FCD51E76
7022438662902A56B3E0357B0069E32920AD293DA451400D8B372252DDB07E10EC6336052406843F26F1D4BB05653685442870CF8EF4F80AA32817BA1FF5DA21
FA2E244B147F1AC674A4FADF4C84D436242D6162F9EBD8C981AF9D9B03D89E07D38B908A164CFFCFC50B5870504452181B388F5B28563310084A7B70A3315CA9
CB832728F334D3CE575E63D90B606537B06543DE00ED7D984C8BFF935F19D987C6057077E6A9A998DA624C915AA0229E7C332F3E316FBA581103F0B65E038051
3938806EE8F605E8EBD1B70BAF5CC9E388A519A49E43F659BDE19C3AACFF77EF1761550701CC83D2E553D00996557EF1D2BE36631C34A028C20273B3EF5421A8
088647C0DBE522CC45F518F00F72C5204C19298A905FF5BAAEA6CF8BC6C218833C3720BA4E78EFBE68A1A994A148077D01B9741E31B7F0058DF99C45152BCD71
6AD09776C8F8BA4C6A109C944ECA7DCD87C1D18D84AF12461E6E35610242E851EFE633B09B8CF2B7551AF96B5F6A174CFF8DA609BAC67AB63955F86BA13B4407
A218791C73586FBE703B94C302BEB2DC6CAA019A0344A628FCE3FF1EAC9A1FCC2AA00BC36DFC87264BDC38E91B39C01B088FFFBD147E93C3ADAB77FE2CBE2DA0
A512BEC46F4FB04DCC8BAF44D500E4FFF0E9C0E10B2ABAC8DB0024567B77E92A6050DFF970E8D35314D032C5C98D89B1C7FF16EE807B34D9E13E59EF33FCF138
639AF26C5318
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
307 413 818 511 818 766 255 409 409 511 766 307 358 307 511 511 
511 511 511 511 511 511 511 511 511 307 307 766 766 766 511 766 
743 704 715 755 678 653 773 743 385 525 769 627 896 743 766 678 
766 729 562 715 743 743 999 743 743 613 307 500 307 613 766 511 
511 460 460 511 460 307 460 511 307 307 460 255 818 562 511 511 
460 422 409 332 537 460 664 464 485 409 511 278 511 613 1000 511 
1000 307 307 514 1000 444 443 511 1083 562 460 985 1000 1000 1000 1000 
307 307 514 514 500 511 1022 511 959 409 460 715 1000 1000 743 333 
307 459 660 623 908 277 460 511 947 382 664 667 358 947 511 399 
778 347 358 511 603 639 277 460 301 377 664 750 750 750 511 743 
743 743 743 743 743 883 715 678 678 678 678 385 385 385 385 755 
743 766 766 766 766 766 778 766 743 743 743 743 743 627 537 511 
511 511 511 511 511 715 460 460 460 460 460 307 307 307 307 511 
562 511 511 511 511 511 778 511 537 537 537 537 485 511 485 ]
CorelDrawReencodeVect /_R34342333-Euclid-NormalItalic /Euclid-NormalItalic Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
283.85348 488.75896 426.31710 488.76009 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
283.85348 488.75953 m
421.94239 488.75953 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
421.52712 491.39433 m
426.31710 488.75953 L
421.52712 486.12472 L
421.52712 491.39433 L
f
@J

@rax %Note: Object
301.30611 477.25285 301.30724 573.68976 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
301.30668 477.25285 m
301.30668 569.31506 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
298.67187 568.89978 m
301.30668 573.68976 L
303.94148 568.89978 L
298.67187 568.89978 L
f
@J

@rax 289.88079 558.21543 296.22076 563.65143 @E
[0.00028346 0.00000000 0.00000000 0.00028346 289.88077680 558.34750713] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
0 0 (x) @t
T
@rax 412.54101 478.13216 417.02088 485.77606 @E
[0.00028346 0.00000000 0.00000000 0.00028346 412.54099278 478.26423447] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
0 0 (t) @t
T
@rax 372.88913 564.05537 487.02217 574.87918 @E
[0.00028346 0.00000000 0.00000000 0.00028346 372.88912022 566.55125487] @tm
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
e
/_R34342333-Euclid 42333.00000 z
0 0 (ligne caract\351ristique 1) @t
T
@rax 382.67433 464.58369 497.15518 475.40750 @E
[0.00028346 0.00000000 0.00000000 0.00028346 382.67431671 467.07957347] @tm
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
e
/_R34342333-Euclid 42333.00000 z
0 0 (ligne caract\351ristique 2) @t
T
@rax %Note: Object
319.54394 514.86746 387.72680 562.51332 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
319.54394 514.86746 m
387.72680 562.51332 L
S

@rax %Note: Object
320.36542 487.21096 388.54828 534.85682 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.00006 1.00006 0.00000 @w
320.36542 534.85682 m
388.54828 487.21096 L
S

@rax %Note: Object
349.93871 542.24957 381.15496 542.25071 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
349.93871 542.25014 m
381.15496 542.25014 L
S

@rax %Note: Object
349.11723 508.93739 380.33348 508.93852 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
349.11723 508.93795 m
380.33348 508.93795 L
S

@rax %Note: Object
371.55997 536.95786 376.77373 554.83512 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
371.55997 554.83512 m
374.78098 551.61411 376.77373 547.16428 376.77373 542.25014 c
376.77373 540.40734 376.49339 538.62945 375.97351 536.95786 C
S

@rax %Note: Object
370.73849 496.35298 375.95225 514.23024 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
370.73849 496.35298 m
373.95950 499.57398 375.95225 504.02381 375.95225 508.93795 c
375.95225 510.78076 375.67191 512.55865 375.15203 514.23024 C
S

@rax 382.52409 544.81380 397.55594 552.80580 @E
[0.00028346 0.00000000 0.00000000 0.00028346 382.52408050 545.80986980] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid 42333.00000 z
0 0 (+) @t
T
@rax 382.52409 544.81380 397.55594 552.80580 @E
[0.00028346 0.00000000 0.00000000 0.00028346 382.52408050 545.80986980] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
32935 0 (c) @t
T
@rax 381.63005 497.95937 391.32198 503.39537 @E
[0.00028346 0.00000000 0.00000000 0.00028346 381.63003328 498.09144635] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid 42333.00000 z
0 0 (-) @t
T
@rax 381.63005 497.95937 391.32198 503.39537 @E
[0.00028346 0.00000000 0.00000000 0.00028346 381.63003328 498.09144635] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R34342333-Euclid-NormalItalic 42333.00000 z
14097 0 (c) @t
T
@rax %Note: Object
332.63291 523.55112 335.92054 526.83874 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
334.27672 526.83874 m
335.18438 526.83874 335.92054 526.10258 335.92054 525.19493 c
335.92054 524.28728 335.18438 523.55112 334.27672 523.55112 c
333.36907 523.55112 332.63291 524.28728 332.63291 525.19493 c
332.63291 526.10258 333.36907 526.83874 334.27672 526.83874 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font Euclid
%%+ font Euclid-NormalItalic
%%EOF
