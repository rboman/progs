%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 287 444 541 617 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: domqcq1d.eps
%%CreationDate: Mon Mar 10 09:53:47 2014
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 14.0.0.701
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if/patternScallingMatrix where{pop
patternScallingMatrix $ptm matrix concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup
/$sdf xd{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd
/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra
add exch load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq
{$SCA}{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2
copy ge{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup
0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor
exch def convertcolor get_devicen_color aload pop convertcolor
get_devicen_color_specs CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse
/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll
dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1
roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1
roll pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font Euclid
%!FontType1-1.0: Euclid 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /Euclid def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 32 /space putdup 67 /C putdup 46 /period putdup 76 /L putdup 49 /one putdup 112 /p putdup 116 /t putdup 100 /d putdup 101 /e putdup 97 /a putdup 110 /n putdup 103 /g putdup 99 /c putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA4FD547AC1857372BEE88BEF04F350ADEC21D72A17F822B7DA7449147F456503359226AC9425DDA46541
7037CFCA57D6DDC8141B0272412526200517D10F7A1A4DE6146A856D0BBF221709E52A7140D33E43432CA79E6949A8757352090C2F277B86BCFE747F74A2C795
BAC1621874916C2AD5E48E0DB778C251ACB759866B41A0A32F8C8BDA0C743A61C7A9D9426B59D5027E84DDB0837D57A87672293B25F269AC6F3DFBEBDB01D5A6
6A9D6BBEADA755ECDF43EEB6F31453AC26020D69E08AD8D2BA789A3745C607867B45D59BF06E3AC9648EA88C2958FC86D6F37062C64C839550F07530A63736E1
E6D6C62657D23C2F5A4D0CD504C1EBBB84E0E3F5F33FE6F04123B9E2F90185B85A908C5E5EB820338E1A80C98B7549AFBA9B022585155DA32FEC77F595AA5D14
CD6B546F2E598833BEDA535879017138FBA7261B0AF595FCD4AEFE1F82EF9B1DC0CD47BBD698194472B2340E885828B7991BFFB40DE21AFC12A85B6B5AAD94F9
7CDFB1B06165267A8AA6D07970C61229669296F7BA1DBF0105638514C2CFC9A8890620BF30D5607EC20963C1803FCF18A55F7CC4C04AB6A2CF31FD06D8105A0F
62BBFC8E78D393A8461C226FA7B0FBFC1BC879E0A35B4F0C4D803D18363AA98BF53A4976780E5FF82E97531C559BBB9E3F716CCEB5AF9E62BD46893338EC6FA2
1D640FD9E389820796F9DD6CC609D8BB2E4DE07C9045ED24001E1E67C3843D45D81244CBF4F6CA2202B0F728BEB6C495E357DD8C2A688E43AB8E526ABF216C8A
84CE7A73B3B665781E89834D77EBF53BBA3AD6C628032613ABAACCBF24A2BB2FB0BF9ABFDE52D58535D78052FE3A9F38B8B64EC8958C18F66CE20C17B65AC6BA
FF846ED5E079683624CE8A50CCF6FFA26E30D958C20FBAB7F07CC21BC0870AA3B56B564EBF3F92AAA59C15B256DAA90B91A72E6041BAC73B8880EB518AA1ED18
5A8B44D678E5EA9A8D3494962D2EF173E88C05D68494A3957570C4AB90863D8C8EC0AD24D116F8EA40D0405474A7076D8DF99882EBF42C706B699AB58F71049A
9F6CEBAE683C6A07FA57B4B5AA7215C1C3033A022B2E04ED1915C21BD2F0537894AD150E2500235A1A1A258B6DF5A4122E68E6F15967DA5CC8F963DA59616B3F
4E3338246FC28452BB15D510E6229B280D0EEAC793D45C930A168D4860D9E966023F5F958E71850E756FAF5FDFB659AA40353EB5392565298BDB19D6F5B9DCE1
9286A0F7B50A082BE5513B9A4EFC37515F7A9D2C4025CC70568826D6C94FC3ACE6DB3FB480847EB11F0168A5C7B37CCA88DE0683CAB204F4F28B5565208BB835
4CC9014D460056FB8BCC21FD31D32FE3209991B936BECFE5377CCDF6171AAAB4F502DFC36CED97B4FFEB29CF24C7910A15A907D230F60565AEDD0543A2E4D211
F2767011EFEB710C0C550F57F360A19260AAD137C77D2B3B0F5FADF04EF62758F70687F8C92D13EAA8F5D2291BC37BBD9F8454477BAEB9EC9C91DF5628B9F04D
720568F1CC4E5417D46B49E5E98EBEA405388DDB3303D47E6692F4DE72AFEF46D86468B10DADFD2887CC2FD7BFB2198466E8A2ED4EFC1AD113A6FA1EB9DB5BA8
1A6A4247112D09F25C0BB67A2E7367B4C544E4E9359BBFEB9D4A7B1B6DB14F3D6A2876B2208CDD7FE703D745FC6C099C8EFE6CA5489F41CB14BD2C42C1135946
D1C340C75818913B6FBEC215F7E69AD2726133D94EE8BC0F0358FD6E669FA4763C3E1D34483097263CAC8A9B4B6B11160B317197EFD4968BA0ECF447CA7E27F7
1FF31CF6F15F7AED564BB6B9CA415EC136E47BBEF6C90983FBF9CCC743D6397C2890D36D3FAE6E4AC72DFABF092C1113E8301F67BEE6786DE2F5C76D5738CEA6
702F542D3278701FC02B9C6F6DD66EA174802738565C4AE46445F5E9B53294C5FE897D9FB3363DAA94DB383F29D7616141A79E03491D5958853BA8A859330924
245D374834A35DE972A0773149B28C0BAE961C58AE7E21E8309C54D7379BA19DF9AA21C1D38DD8B63D1180373CBB05EA1073EE773667C47B7893B1015F8C2E19
18B3C4A7F9A21E012837789B2C1FA220E22157692F4C151D42BAA6AF255CE78BBD6BEDE4AA580DE1050971FA3ED33A6A14C790590EFE86BBB3EA0878AA53F77E
4F5B7236D27A91932A4E608CC8B1330182584D136C337F73BD781A0B8F01EDAA5CB29CCD9CE74BFC8496A9124E557FEB910CA8F2168CA8574031B42C52A1964F
DCE2C99A120533CBCD6A4D2B5C99176EA68477A4D1E183199FA9BA5ECDA3A39634BFFD9347AD3000B157688964F4FEBA0563C2E8FB12BC4A849A8B6C79C844CA
399CBC5B82CC223E6D132DE77AAEF36435A6F4B84D496B1D535BC936EEFDF5E4107439945A248EABC8C01DF64895A75761F397B02E13397B3CB0B4749456A01B
68B00C08D05159B165CE7D8D9E8B13B6E1E5EBC0FA2AACEA0F8B5A5BCF913D5995C1C27EE3C706AAF0EB653F483E0CEC425560EE54031D2B7E3758C75411FC20
E5385BE5453CBAB3C63870B65D7D4D3D3A8854F5B35D339BB23980E4FCF4A20E8A7958E6923F5DA562C5FBA745C864460865C7C9EA02E6849C65065626D05F07
64BC28936585C6BB8D810FA3CA3D921786BEDD2C319D0719C0C83A5BEDDA52EF2213248157E18896BCDC26746CB5561296A247094F30B3F4D9E8E37BD4B466CD
4FFFD791A09E71CE91104C1AA2CE187C5DF2DEABD107315BB63527C87DCB0B2E064E2C2D65382F06CDED28DC9371652AE3DBCFA68BB5CD103795E7505E27DCC8
4CD28226CFEA3C78E7864333B1C328457383AD576CE511832BAF095868426D3A800AC4D0AE680AF7B1908B204A4DBFB078EDAAC43BDD9C0B2561D1EF758F5086
953819EBDA9119FDFC8368AD27201BA8F39DC95DC31E9C25DC535C2F8250AF248E060D92D778B41446C83837AE9D446B08FCE210097CFE740ADBFC2EA8E0CA49
EA80B117CC2C83ECE5CC238928CD09033E7920F1A3CB390D0A32A96DFF1EB36BBD9844D3E238E2B68CFC053FFB7265C20A82CBB19DDF0A43EE93F180B1706E84
D15AC240FC920EB64250EE6F5A01B8F680823E964659B71405CFD71B7724EF92A033F51C6D50380FB3FB79E9F52706E2C9CB0436F846DA10C4E4DFB0D905EB2A
14F9FA03E18D2D637AE6F2406E1B2CA3742CF486F4B51352C4FBD63837785BBA3C2D8948C161FABDEC55EBF235E5B27039EA91943B6BD6F47BEC6282DE6E2572
C4B6B2CE6E15E4CCA276A02C8B793C579B84BC5AB3E2CB2DFCA93BC615223789773B16C7007BB3733FA8078E0BEC41DD2F83EEF6C82916751573C3A6717865B3
9BB2725BB26DCAFFADFE726200F691961828951A3F30116D6EB4FD4CCBDF6D974465C3CAE7B9773D7695A7D2258DC739D42D7112EBB71A47ED4FE8E13240D9F7
3F58C07D74B478EAD0FE7255CE58659A4799FE1B6D82C99E135959465AB94320C6CF37918B1ED9A46EC4912824E52ACBE1A12383BCF418F661D93B42AB8BDF53
B3DDA07004F42116565BA3AB15AC50001B2C063E429272D753418F825451C488B0264B32E0282028256D408FC2F77A10C07EC60BA6024D01560AC63605737C5C
6871AF7D4DED84D3BF0A561B238E5FBB3E60D5F338DC1A0BD8A2E0FB8A254FD9C1A69BCB39A8279D0F2B226A4CA28E1DB728FD3E5EF3385A942B0B66EF8A3880
232DE8BB535ACC0C441BA80AD49D0FD41F656D7FE403449ECF3B8C5F1C46BAD2A8419F4BD0281AFDE32438E8C2A853873004A7528EA7A0308B3332251EE11041
E6D4B56BC637BA82023502FC4D4B016B34BC3D92C5E29E7EED5A98C4C9BA623D607C1B3A012916E4AF23FBED0639AB94C385313B47BE6D1E0A507F2D800A89D5
38558EB806112E2E95CCD4ED7C5D2EE2707CAA309A2803A359385A18E7C25712CFDDB0C43B25278AE58A777D4B8EFB6421F74AE888180BDFF55C2BE4EDA7023F
32FC60FD2F76242E92AEBCD0ABB0231E52B6A339417BA2BE57A35E91C912EB76AC8BBC8B11BBA373AEED61525D61AC28DE25A30B4259205EB58D72D30293E395
6985F8682156174E8FDDAABB923603AF801C88FEF429C264D9E8C806056016AFA1FD5A7B5F3C1DB0A4C5F506A07BA44FF34A3D8424E04414E7F69FDD8BD16122
3FAE54BE6993F4F6563B18F79CD9F0ACE4ADAAE8C52D31C5F490F3CAB1481188000A009FDDC9DD455D2C888F873E3B3A4C0F22955DCF06D08D5EA502A0006796
8E588BCB099AB084984E905AE7767B7C197C678752095524423DF5F63091AD547224DFD14BB2E7B7A02820555750C45430A804620A9A9FFD473DD79351D0DD62
1E1D80D78DB8D5A90E9E14E600CAE915D560B4B2EB40C2FD2F2CA8A08179899C774EECCF156B5ED464676EECC727F23392CC7308F53F316E11A081055753332C
42B4A11CC7FDC707DAFEBEF7E7E9A86D6CE57A64A11803BEC8E120A2862ACF27C516299C567C402E7E5DBADCA65BCBF15846ACDF6B069067220326AF3F3605FE
268F15010A7E069A07F25F64F0B84B28C01EC94F3B688D30185FDE54D7F9DD5E5304AADE439FDDE4ADE5366CE3DC159B236662E578E0EFBE25C142AAC74F9A0F
CFA04D0553E5909CA4273C9839E24BA21183A1F67CDED3D48A38429667E2A63363AA2CD2AA880DDDF0F4C544EE6CA42759F1B3BFE2F5CBD0EB8D3DB8DF8F713A
A9B5D6F8A82A389A2392B70BF7F38F4DCAA294723566D924C5AC9CC12791945166CA57621D16D03C1080CDBB3F307ABF136D25B301AF99CA94F1AC08DA2DE5EA
058ECE14754823D26391435CAA96EA075D8D0437003902966D7594C6825B317773509BD20C28DE12C63555596BAC68BA98E9C2EAC3CA1F1F08A2DD2993371035
C368EDF1A0ED52AB0DF831C7E9B6C2E61BC7D86482E27B739175904B1614612A97A509C56E1950C615A9950DBDBAA84CFA6A3715AC18D9D9C95B3D608E7695F2
3EBD28A2B61784CB10A8675A55EC6B0671BEE607F11EFDF4ACE8B396833FB63E67F1874163194A7B23A9F510F8193D7C3529E14CADB18268BF256B07973F7AE3
1847E4F1335D89C921E00302BDA85639452EA6BE9CC03B2CB85B1A41634793C45EE115F9AE0F530C3A5B18AA763227F67845B7AAD3D80BA2DBFAC5A41855763C
DC88BE48225E1112AACFE1A3F6E01FE6FC4C4A0FCA07B7C1B1A8F530C9B0715E110BA705ACB6FB4232F3B5A9EFBB68856BB8304FEEF308F5619B861D82B28F7E
F3110BA0A89B4C5B8B4292BD4EBA1CA9D51BA42C23CEE18C70564A3E87D8B2D3B37DE44FA02E6340D25E99305748F3EC418128BAE512F2BB876BF1B69AA3FB42
EF1E847B1DF8FD899AF015DFF6977EB6889F7DA3F6857E2FA6660384AA7959B487610948A37F67B2696C3D1FFB5E2F463E3447FE2AB3FF2650DE0CA445F13EF8
B166B65E036AFEBF9E2CD5F062F910164177907BACE1AD786913D41067F0210A4F7EB04019E5694BC4C594FF91BDC6D57AF36939911AD858034BF210F4E90E98
18E0BA783776ACC72EA253DF5F8DECE8835B834799F1407A5D3205DDC35F26CEE89995313513CD098F181CC5799DFC7B0177D756C9582819B50C158367EACC3D
8096E8E3424A97CE48F3B59CFF2ADC113BCBD817DDC0C6758948FDC7404CC0C79B987448CEAE581C1AF915FC4DFC82
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 333 
278 351 833 500 833 778 181 389 389 500 778 278 333 278 500 500 
500 500 500 500 500 500 500 500 500 278 278 778 778 778 472 778 
750 708 722 764 680 653 785 750 361 514 778 625 916 750 778 680 
778 736 555 722 750 750 1028 750 750 611 278 500 278 611 778 500 
500 555 444 555 444 305 500 555 278 305 528 278 833 555 500 555 
528 392 394 389 555 528 722 528 528 444 500 278 500 611 1000 500 
1000 278 307 500 1000 444 444 500 1082 555 444 1014 1000 1000 1000 1000 
278 278 500 500 500 500 1000 500 959 394 444 778 1000 1000 750 333 
278 444 639 500 750 277 444 500 947 382 667 667 333 947 500 399 
778 347 358 500 548 639 278 444 301 377 667 750 750 750 472 750 
750 750 750 750 750 903 722 680 680 680 680 361 361 361 361 764 
750 778 778 778 778 778 778 778 750 750 750 750 750 625 500 500 
500 500 500 500 500 722 444 444 444 444 444 278 278 278 333 500 
555 500 500 500 500 500 778 500 555 555 555 555 528 555 528 ]
CorelDrawReencodeVect /_R35442333-Euclid /Euclid Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
328.25424 462.68079 474.68636 594.72085 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.10 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.10 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
421.08208 594.47679 m
374.32006 593.32309 306.26589 539.41606 335.14101 483.15685 c
349.95402 454.29420 425.10161 459.91644 448.19121 475.65865 c
497.23002 509.09386 472.36734 600.04658 421.08208 594.47679 C
@c
B

@rax %Note: Object
287.55354 537.40431 408.95631 616.36876 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
287.55354 540.37389 m
321.72888 523.78243 371.92337 580.49235 408.95631 616.36876 c
S

@rax %Note: Object
298.42129 512.03820 451.24328 616.36876 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
298.42129 515.00806 m
343.92444 492.91710 417.82620 600.76913 451.24328 616.36876 c
S

@rax %Note: Object
309.28904 486.69704 469.11345 592.88287 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
309.28904 489.64224 m
358.31112 465.84312 440.30296 592.88287 469.11345 592.88287 C
S

@rax %Note: Object
320.15679 461.33150 479.98120 567.51732 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
320.15679 464.27669 m
369.17887 440.47757 451.17071 567.51732 479.98120 567.51732 C
S

@rax %Note: Object
372.68844 445.03824 490.84894 542.15150 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
372.68844 445.03824 m
417.76583 470.75754 469.25093 542.15150 490.84894 542.15150 C
S

@rax %Note: Object
417.25757 445.03824 501.71669 516.78567 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 1.00 1.00 0.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
417.25757 445.03824 m
452.03471 476.05408 485.40246 516.78567 501.71669 516.78567 C
S

@rax 467.58444 576.61824 499.37244 585.35405 @E
[0.00028346 0.00000000 0.00000000 0.00028346 467.58442384 576.88212063] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35442333-Euclid 42333.00000 z
0 0 (0 C.L.) @t
T
@rax 300.19946 468.79739 331.98746 477.53320 @E
[0.00028346 0.00000000 0.00000000 0.00028346 300.19945359 469.06127418] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35442333-Euclid 42333.00000 z
0 0 (1 C.L.) @t
T
@rax %Note: Object
327.69836 462.62920 455.98309 566.83928 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
356.83228 566.83928 m
332.77748 545.65228 318.35083 514.75068 334.59250 483.10498 c
349.40580 454.24290 424.55310 459.86428 447.64271 475.60677 c
450.70781 477.69647 453.48435 480.01096 455.98309 482.51225 C
S

@rax %Note: Object
356.83228 482.51225 474.13077 594.66954 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 0.40 null ] set_outline_color
0 1.50009 1.50009 0.00000 @w
455.98309 482.51225 m
493.47099 520.03389 468.61370 599.64633 420.53386 594.42463 C
400.07537 593.92006 375.54151 583.31764 356.83228 566.83928 C
S

@rax %Note: Object
354.47017 564.16932 359.15499 568.85414 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
356.81272 568.85414 m
358.10617 568.85414 359.15499 567.80532 359.15499 566.51159 c
359.15499 565.21814 358.10617 564.16932 356.81272 564.16932 c
355.51899 564.16932 354.47017 565.21814 354.47017 566.51159 c
354.47017 567.80532 355.51899 568.85414 356.81272 568.85414 c
@c
B

@rax %Note: Object
453.45061 479.77257 458.13543 484.45739 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.56693 0.56693 0.00000 @w
455.79317 484.45739 m
457.08661 484.45739 458.13543 483.40857 458.13543 482.11483 c
458.13543 480.82139 457.08661 479.77257 455.79317 479.77257 c
454.49943 479.77257 453.45061 480.82139 453.45061 482.11483 c
453.45061 483.40857 454.49943 484.45739 455.79317 484.45739 c
@c
B

@rax 463.61424 467.97420 540.54652 478.79802 @E
[0.00028346 0.00000000 0.00000000 0.00028346 463.61421926 470.47009303] @tm
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
e
/_R35442333-Euclid 42333.00000 z
0 0 (pt de tangence) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%+ font Euclid
%%EOF
